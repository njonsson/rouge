h1. Welcome to Rouge

bq. His code not "“functional”":http://en.wikipedia.org/wiki/Functional_programming or "“elegant”":http://www.ccil.org/jargon/jargon_20.html#TAG542.<br />What do Code Monkey think?<br />-- Jonathan Coulton, "“Code Monkey”":http://www.jonathancoulton.com/songdetails/Code%20Monkey

Do Ruby's stylish core and standard libraries make your JavaScript green with envy? Tart up that dowdy JavaScript -- put on some *Rouge*.

!http://www.splendicity.com/ebeautydaily/files/2007/10/kyoto_japan_geisha200.jpg!

Rouge is a JavaScript implementation of some of the Ruby base classes and modules.

h1. Usage

Rouge makes your JavaScript look and feel more like Ruby while preserving sound JavaScript style.

<table>
<thead>
<tr>
<th>JavaScript</th>
<th>Rouge</th>
<th>Ruby</th>
</tr>
</thead>
<tbody>
<tr>
<td><pre><code>var array = [];
for (var i = 0; i < 10; i++) {
  array[i] = 'foo';
}
console.debug(array);</code></pre></td>
<td><pre><code>var array = Array.new(10, 'foo');
console.debug(array);</code></pre></td>
<td><pre><code>array = Array.new(10, 'foo')
puts array.inspect</code></pre></td>
</tr>
<tr>
<td><pre><code>var array = ['foo', 'bar'];
for (var i = 0; i < array.length; i++) {
  console.debug(array[i]);
}</code></pre></td>
<td><pre><code>var array = ['foo', 'bar'];
array.each(function(s) {
  console.debug(s);
});</code></pre></td>
<td><pre><code>array = %w(foo bar)
array.each do
  puts s.inspect
end</code></pre></td>
</tr>
<tr>
<td><pre><code>var array = ['foo', 'bar'];
var collected = [];
for (var i = 0; i < array.length; i++) {
  collected[collected.length] = array[i];
}
console.debug(collected);</code></pre></td>
<td><pre><code>var array = ['foo', 'bar'];
var collected = array.collect(function(s) {
  return 'item: ' + s;
});
console.debug(collected);</code></pre></td>
<td><pre><code>array = %w(foo bar)
collected = array.collect do
  "item: #{s}"
end
puts collected.inspect</code></pre></td>
</tr>
</tbody>
</table>

You should have a look at "the JSDoc documentation":http://njonsson.github.com/rouge.

h1. Test coverage

Rouge has around 400 executable specifications authored using the "Screw.Unit":http://github.com/nathansobo/screw-unit framework. Run the specs by opening _src/spec/suite.html_. (Firefox works best for this.)

h1. Credits

Rouge's author is "Nils Jonsson":mailto:nils@alumni.rice.edu?subject=Your%20Rouge%20library. Released under the "MIT License":../raw/master/MIT-LICENSE.
